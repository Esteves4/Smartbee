13c13
< #define TEMPOENTRECADALEITURA 60000                             // Time between each reading in milliseconds 
---
> #define TEMPOENTRECADALEITURA 10000                             // Time between each reading in milliseconds 
28c28
< SoftwareSerial SIM800L(4, 5);                                   // Serial Port configuration
---
> SoftwareSerial SIM800L(4, 5);                                   // Configuração da Porta Serial
91c91
<   SIM800L.println("ATZ");                                       // Sends AT command to reset the GSM
---
>   SIM800L.println("ATZ");                                      // Sends AT command to reset the GSM
95c95,96
<   if (radio.rxFifoFull()) {                                     // If the RX FIFO is full, the RX FIFO is cleared
---
> 
>   if (radio.rxFifoFull()) {                                    // If the RX FIFO is full, the RX FIFO is cleared
105,107c106,120
<       configureBearerProfile("claro.com.br", "claro", "claro");// Configure the GSM network
<       //configureBearerProfile("timbrasil.br", "tim", "tim");
<       sendGET_Requisition();                                   // Sends a GET requisition to the web service with the data received from the sensor node
---
>       bool isOK;
>       Serial.println("Configuring GSM Network");
>       isOK = configureBearerProfile("claro.com.br", "claro", "claro");// Configure the GSM network
>       if (isOK) {
>         Serial.println("OK");
>         Serial.println("Sending the GET Requisition");
>         isOK = sendGET_Requisition();                                   // Sends a GET requisition to the web service with the data received from the sensor node
>         if (isOK) {
>           Serial.println("OK");
>         } else {
>           Serial.println("Error sending the GET Requisition");
>         }
>       } else {
>         Serial.println("Error configuring GSM Network");
>       }
120,121c133,134
<   int ok;                                                        // Local variable to know if the arduino slept the time we wanted
<   for (int i = 0; i < 5; ++i) {
---
>   int ok;                                                      // Local variable to know if the arduino slept the time we wanted
>   for (int i = 0; i < 1; ++i) {
222,224c235,236
<   SIM800L.println("AT+CSQ");
<   delay (1000); //Tempo de espera
<   gsmAnswer();
---
>   bool isOK;
>   uint8_t counter = 0;
226,228c238,247
<   SIM800L.println("AT+HTTPINIT");
<   delay (2000);
<   gsmAnswer();
---
>   do {
>     SIM800L.println("AT+HTTPINIT");
>     delay (2000);
>     isOK = waitFor("OK");
>     ++counter;
>     if (counter >= 3) {
>       Serial.println("ERROR: AT+HTTPINIT");
>       return false;
>     }
>   } while (!isOK);
230,232c249,260
<   SIM800L.println("AT+HTTPPARA=\"CID\",1");
<   delay (2000);
<   gsmAnswer();
---
>   counter = 0;
>   do {
>     SIM800L.println("AT+HTTPPARA=\"CID\",1");
>     delay (2000);
>     isOK = waitFor("OK");
>     ++counter;
> 
>     if (counter >= 3) {
>       Serial.println("ERROR: AT+HTTPPARA");
>       return false;
>     }
>   } while (!isOK);
238,240c266,277
<   SIM800L.println("AT+HTTPACTION=0");
<   delay (10000);
<   gsmAnswer();
---
>   counter = 0;
>   do {
>     SIM800L.println("AT+HTTPACTION=0");
>     delay (9000);
>     isOK = waitFor("OK");
>     ++counter;
> 
>     if (counter >= 3) {
>       Serial.println("ERROR: AT+HTTPACTION");
>       return false;
>     }
>   } while (!isOK);
242,244c279,290
<   SIM800L.println("AT+HTTPREAD");
<   delay (2000);
<   gsmAnswer();
---
>   counter = 0;
>   do {
>     SIM800L.println("AT+HTTPREAD");
>     delay (2000);
>     isOK = waitFor("OK");
>     ++counter;
> 
>     if (counter >= 3) {
>       Serial.println("ERROR: AT+HTTPREAD");
>       return false;
>     }
>   } while (!isOK);
246,248c292,303
<   SIM800L.println("AT+HTTPTERM");
<   delay (2000);
<   gsmAnswer();
---
>   counter = 0;
>   do {
>     SIM800L.println("AT+HTTPTERM");
>     delay (2000);
>     isOK = waitFor("OK");
>     ++counter;
> 
>     if (counter >= 3) {
>       Serial.println("ERROR: AT+HTTPTERM");
>       break;
>     }
>   } while (!isOK);
250,252c305,318
<   SIM800L.println("AT+SAPBR=0,1");
<   delay (2000);
<   gsmAnswer();
---
>   counter = 0;
>   do {
>     SIM800L.println("AT+SAPBR= 0,1");
>     delay (2000);
>     isOK = waitFor("OK");
>     ++counter;
> 
>     if (counter >= 3) {
>       Serial.println("ERROR: AT+SAPBR");
>       break;
>     }
>   } while (!isOK);
> 
>   return true;
255a322,323
>   bool isOK;
>   uint8_t counter = 0;
257,259c325,335
<   SIM800L.println("AT+SAPBR=3,1,\"CONTYPE\",\"GPRS\"");
<   delay (1000); //Tempo de espera
<   gsmAnswer();
---
>   do {
>     SIM800L.println("AT+SAPBR=3,1,\"CONTYPE\",\"GPRS\"");
>     delay (1000); //Tempo de espera
>     isOK = waitFor("OK");
> 
>     ++counter;
>     if (counter >= 3) {
>       break;
>       //return false;
>     }
>   } while (!isOK);
261,263c337,347
<   SIM800L.println("AT+SAPBR=3,1,\"APN\",\"" + String(APN) + "\"");
<   delay (3000); //Tempo de espera
<   gsmAnswer();
---
>   counter = 0;
>   do {
>     SIM800L.println("AT+SAPBR=3,1,\"APN\",\"" + String(APN) + "\"");
>     delay (3000); //Tempo de espera
>     isOK = waitFor("OK");
> 
>     ++counter;
>     if (counter >= 3) {
>       break;
>       //return false;
>     }
265,267c349
<   SIM800L.println("AT+SAPBR=3,1,\"USER\",\"" + String(USER) + "\"");
<   delay (3000);
<   gsmAnswer();
---
>   } while (!isOK);
269,271c351,361
<   SIM800L.println("AT+SAPBR=3,1,\"PWD\",\"" + String(PASS) + "\"");
<   delay (3000); //Tempo de espera
<   gsmAnswer();
---
>   counter = 0;
>   do {
>     SIM800L.println("AT+SAPBR=3,1,\"USER\",\"" + String(USER) + "\"");
>     isOK = waitFor("OK");
> 
>     ++counter;
>     if (counter >= 3) {
>       break;
>       //return false;
>     }
>   } while (!isOK);
273,275c363,374
<   SIM800L.println("AT+SAPBR=1,1");
<   delay (2000);
<   gsmAnswer();
---
>   counter = 0;
>   do {
>     SIM800L.println("AT+SAPBR=3,1,\"PWD\",\"" + String(PASS) + "\"");
>     delay (3000); //Tempo de espera
>     isOK = waitFor("OK");
> 
>     ++counter;
>     if (counter >= 3) {
>       break;
>       //return false;
>     }
>   } while (!isOK);
277,279c376,400
<   SIM800L.println("AT+SAPBR=2,1");
<   delay (2000);
<   gsmAnswer();
---
>   counter = 0;
>   do {
>     SIM800L.println("AT+SAPBR=1,1");
>     delay (2000);
>     isOK = waitFor("OK");
> 
>     ++counter;
>     if (counter >= 3) {
>       break;
>       //return false;
>     }
>   } while (!isOK);
> 
>   counter = 0;
>   do {
>     SIM800L.println("AT+SAPBR=2,1");
>     delay (2000);
>     isOK = waitFor("OK");
> 
>     ++counter;
>     if (counter >= 3) {
>       break;
>       //return false;
>     }
>   } while (!isOK);
280a402
>   return true;
